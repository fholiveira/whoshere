#!/bin/bash

source whoshere.d/globals

function show_all() {
  cat $index_path \
    | cut --fields=2 \
    | sort --unique \
    | while read -r; do show_by_name "$REPLY"; done
}

function show_by_name() {
  local name=$@

  echo "$name:"
  echo -n '  '

  cat $index_path \
    | grep -e "$name"$ \
    | cut --fields=1 \
    | tr '\n' ' '
    
  echo ''
}

function show() {
  local query=$@

  cat $index_path \
    | grep $query --ignore-case \
    | cut --fields=2 \
    | while read -r; do show_by_name "$REPLY"; done
}

function contains_name() {
  local name=$@
  [ $(grep -c $name$ --ignore-case $index_path) -gt 0 ];
}

function delete_by_name() {
  local name=$@

  [[ -z $name ]] \
    && echo "You must inform a name to delete" \
    && exit $error_param_missing

  ! contains_name $name \
    && echo "The name '$name' does not appear in the index." \
    && exit $error_param_missing
    
  cat $index_path \
    | grep $name$ --ignore-case --invert-match \
    | sort --unique --output=$index_path
}

function get_name_by_mac() {
  local macaddress=$@

  cat $index_path \
    | grep ^$macaddress --ignore-case \
    | cut --field=2
}

function add() {
  local macaddress=$2
  local name=$1

  [[ -z $name || -z $macaddress ]] \
    && echo "You must inform name and MAC address" \
    && exit $error_param_missing

  [[ ! $macaddress =~ ^([0-9a-F]{2}[:-]){5}([0-9a-F]{2})$ ]] \
    && echo "You must inform a valid MAC address" \
    && exit $error_invalid_param_value

  local macOwner=$(get_name_by_mac $macaddress)
  [[ -n $macOwner ]] \
    && echo "The MAC '$macaddress' is already assigned to '$macOwner'" \
    && exit $error_duplicated_mac

  echo -e "${macaddress//-/:}\t$name" >> $index_path
}

function sort_ascending() {
  cat $index_path \
    | awk -F'\t' '{print tolower($1)"\t"$2}' \
    | sort --unique --output=$index_path
}
